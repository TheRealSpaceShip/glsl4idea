<?xml version="1.0" encoding="ISO-8859-15"?>
<?xml-stylesheet type="text/xsl" href="issues.xsl" ?>

<!DOCTYPE tasks [
        <!ENTITY rArr "&#8658;">  <!--dobbel høgre pil -->
        <!ENTITY rarr "&#8594;">  <!--høgre pil -->
        <!ENTITY nbsp "&#160;">
        ]>

<tasks name="GLSLPlugin issues" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="issues.xsd">


    <task name="Tasks">
        <description>Milestone tasks for GLSL plugin</description>
        <subtask name="Psi">
            <info>Accessor for the parent nodes (where applicable)</info>
        </subtask>

        <subtask name="Type system">
            <subtask name="Goto Definition">
                <subtask name="Variables" completed="true"/>
                <subtask name="Types" completed="true"/>
                <subtask name="Functions" completed="true"/>
                <subtask name="Fields" completed="true"/>
                <subtask name="Methods" completed="false"/>
                <subtask name="Move Reference logic to GLSLFunctionCall" completed="true">
                    <info>etc and make GLSLIdentifier delegate work instead of doing it itself</info>
                </subtask>
                <subtask name="Make GLSLFunctionReference PsiPolyVariantReference" completed="true">
                    <info>so that it can support more than one reference.</info>
                </subtask>
            </subtask>
        </subtask>

        <subtask name="Structure view" completed="true"/>

        <subtask name="Find usages"/>
        <subtask name="Rename"/>
        <subtask name="Annotator">
            <subtask name="Framework for annotations" completed="true"/>
            <subtask name="LValue analysis" completed="false">
                <info>Almost done</info>
            </subtask>
            <subtask name="Additional grammar checks which the parser forgives"/>
            <subtask name="Qualifier order and validity">
                <info>const is the only allowed qualifier on local variables. Make sure the combination and order of the
                    storage qualifiers are correct
                </info>
            </subtask>
            <subtask name="Support for built-in types and methods">
                <info>(Priming of dictionary)</info>
                <subtask name="Variables and functions created as environment files." completed="true"/>
                <subtask name="Implement priming"/>
            </subtask>

            <subtask name="Type compatibility checking">
                <subtask name="Binary Operators"/>
                <subtask name="Parameter Types"/>
                <subtask name="Ternary Operator"/>
                <subtask name="Assignment Operators"/>
                <subtask name="Subscript and Member Selection operators"/>
            </subtask>

            <subtask name="break, return, continue, discard analysis"/>
            <subtask name="Constant expression analysis">
                <subtask name="Function side-effecy analysis">
                    <info>usable for trans-function constant expression analysis</info>
                    <subtask name="Know which built-in functions have side-effects"/>
                </subtask>
            </subtask>
            <subtask name="Array bounds checker">
                <info>Possible since GLSL does not have dynamic arrays.</info>
                <info>Needs constant expression analysis and evaluation to work</info>
            </subtask>
            <subtask name="NVidia / ATI quirks warning"/>
            <subtask name="Indicate inconsistent vector component usage" completed="true">
                <info>Using RGBA with a variable and then later use STPQ...</info>
            </subtask>
        </subtask>

        <subtask name="Auto Completion"/>
        <subtask name="Intentions">
            <subtask name="Rename Variable or method"/>
            <subtask name="Change type of variables and methods"/>
            <subtask name="Swizzling">
                <subtask name="Vector component converter" completed="true"/>
            </subtask>
        </subtask>

        <subtask name="Code formatter"/>
        <subtask name="Method Parameter lookup"/>
        <subtask name="JavaDOC method (and variable) lookup">
            <info>Nice for built-in methods and types.</info>
        </subtask>
        <subtask name="Geometry shader support"/>
        <subtask name="Modular extensions support">
            <info>#extension extension_name : enable</info>
            <info>Load the corresponding environment file with types and mehods.</info>
        </subtask>

    </task>


    <task name="Bugs">
        <description>List of bugs.</description>


        <subtask name="Parser">
            <subtask name="while keyword" completed="true">
                <info>The parser hangs at: (doesn't like the while keyword)
                    <code>
                        <br/>
                        void while
                        <br/>
                        void main() {
                        <br/>
                        }
                    </code>
                </info>
            </subtask>
            <subtask name="Consequtive operators">
                <info>Two consecutive operators hangs the parser.</info>
            </subtask>
            <subtask name="Badly handled function names">
                <info>
                    Certain keywords as function names causes the parser to hang.
                    This has been experienced with the 'in' qualifier and does probably occur with all qualifiers and
                    maybe also other keywords. Example:
                    <code>
                        void in() {}
                    </code>
                </info>
            </subtask>
        </subtask>
    </task>

    <task name="Features">
        <description>List of feature ideas.</description>

        <subtask name="discard;">
            <info>should STRIKEOUT/disable the rest of the code in the current scope. Same with return/break/continue
            </info>
        </subtask>

        <subtask name="Vector component inspection" completed="true">
            <info>if one vector component is used the rest should be aligned with that one: .r -> rgba .s -> stpq
                should give an error if performing incorrect number of parameters for a type .rgb -> vec4
            </info>
        </subtask>

        <subtask name="Methods and prototypes">
            <info>Should warn if a method is missing a prototype or if a prototype is missing an implementation"</info>
        </subtask>

        <subtask name="Compiler feedback">
            <info>compile the glsl program and get the compiler feedback in the console window
                example: http://idea-trinkets.googlecode.com/svn/trunk/native2ascii/
            </info>
        </subtask>

    </task>


</tasks>